kotlin version: 2.2.10
error message: Incremental compilation failed: The following FqNames can't be derived from DirtyData.dirtyLookupSymbols: ru.fredboy.cavedroid.entity.mob.model.Direction.
DirtyData = DirtyData(dirtyLookupSymbols=[LookupSymbol(name=random, scope=ru.fredboy.cavedroid.entity.mob.model.Direction.Companion), LookupSymbol(name=<SAM-CONSTRUCTOR>, scope=ru.fredboy.cavedroid.entity.mob.model.Direction.Companion), LookupSymbol(name=Companion, scope=ru.fredboy.cavedroid.entity.mob.model.Direction), LookupSymbol(name=fromVector, scope=ru.fredboy.cavedroid.entity.mob.model.Direction.Companion), LookupSymbol(name=<SAM-CONSTRUCTOR>, scope=ru.fredboy.cavedroid.entity.mob.model.Direction)], dirtyClassesFqNames=[ru.fredboy.cavedroid.entity.mob.model.Direction, ru.fredboy.cavedroid.entity.mob.model.Direction.Companion], dirtyClassesFqNamesForceRecompile=[])
java.lang.IllegalStateException: The following FqNames can't be derived from DirtyData.dirtyLookupSymbols: ru.fredboy.cavedroid.entity.mob.model.Direction.
DirtyData = DirtyData(dirtyLookupSymbols=[LookupSymbol(name=random, scope=ru.fredboy.cavedroid.entity.mob.model.Direction.Companion), LookupSymbol(name=<SAM-CONSTRUCTOR>, scope=ru.fredboy.cavedroid.entity.mob.model.Direction.Companion), LookupSymbol(name=Companion, scope=ru.fredboy.cavedroid.entity.mob.model.Direction), LookupSymbol(name=fromVector, scope=ru.fredboy.cavedroid.entity.mob.model.Direction.Companion), LookupSymbol(name=<SAM-CONSTRUCTOR>, scope=ru.fredboy.cavedroid.entity.mob.model.Direction)], dirtyClassesFqNames=[ru.fredboy.cavedroid.entity.mob.model.Direction, ru.fredboy.cavedroid.entity.mob.model.Direction.Companion], dirtyClassesFqNamesForceRecompile=[])
	at org.jetbrains.kotlin.incremental.classpathDiff.ClasspathChangesComputer.toProgramSymbols(ClasspathChangesComputer.kt:364)
	at org.jetbrains.kotlin.incremental.classpathDiff.ClasspathChangesComputer.computeFineGrainedKotlinClassChanges(ClasspathChangesComputer.kt:264)
	at org.jetbrains.kotlin.incremental.classpathDiff.ClasspathChangesComputer.computeKotlinClassChanges(ClasspathChangesComputer.kt:164)
	at org.jetbrains.kotlin.incremental.classpathDiff.ClasspathChangesComputer.computeClassChanges(ClasspathChangesComputer.kt:137)
	at org.jetbrains.kotlin.incremental.classpathDiff.ClasspathChangesComputer.computeChangedAndImpactedSet(ClasspathChangesComputer.kt:87)
	at org.jetbrains.kotlin.incremental.classpathDiff.ClasspathChangesComputer.computeClasspathChanges(ClasspathChangesComputer.kt:55)
	at org.jetbrains.kotlin.incremental.dirtyFiles.ClasspathSnapshotBasedImpactDeterminer.determineChangedAndImpactedSymbols(ClasspathSnapshotBasedImpactDeterminer.kt:42)
	at org.jetbrains.kotlin.incremental.dirtyFiles.JvmSourcesToCompileCalculator.calculateSourcesToCompileImpl(JvmSourcesToCompileCalculator.kt:41)
	at org.jetbrains.kotlin.incremental.dirtyFiles.JvmSourcesToCompileCalculator.calculateWithClasspathSnapshot(JvmSourcesToCompileCalculator.kt:97)
	at org.jetbrains.kotlin.incremental.IncrementalJvmCompilerRunner.calculateSourcesToCompile(IncrementalJvmCompilerRunner.kt:60)
	at org.jetbrains.kotlin.incremental.IncrementalJvmCompilerRunner.calculateSourcesToCompile(IncrementalJvmCompilerRunner.kt:23)
	at org.jetbrains.kotlin.incremental.IncrementalCompilerRunner.tryCompileIncrementally$lambda$10$compile(IncrementalCompilerRunner.kt:230)
	at org.jetbrains.kotlin.incremental.IncrementalCompilerRunner.tryCompileIncrementally(IncrementalCompilerRunner.kt:272)
	at org.jetbrains.kotlin.incremental.IncrementalCompilerRunner.compile(IncrementalCompilerRunner.kt:124)
	at org.jetbrains.kotlin.daemon.CompileServiceImplBase.execIncrementalCompiler(CompileServiceImpl.kt:679)
	at org.jetbrains.kotlin.daemon.CompileServiceImplBase.access$execIncrementalCompiler(CompileServiceImpl.kt:93)
	at org.jetbrains.kotlin.daemon.CompileServiceImpl.compile(CompileServiceImpl.kt:1806)
	at jdk.internal.reflect.GeneratedMethodAccessor13.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:360)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:200)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:197)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:712)
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Transport.java:196)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:587)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:828)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:705)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:704)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)


